// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var r="function"==typeof Object.defineProperty?Object.defineProperty:null;var e,t=Object.defineProperty,n=Object.prototype,o=n.toString,a=n.__defineGetter__,u=n.__defineSetter__,i=n.__lookupGetter__,c=n.__lookupSetter__;function f(r,e){return r[e]}function l(r,e){return r.get(e)}function _(r,e,t){r[e]=t}function s(r,e,t){r.set(t,e)}function p(r){var e=Boolean(r.get&&r.set);return{data:r,accessors:e,getter:e?l:f,setter:e?s:_}}function d(r,e,t,n,o){var a,u,i,c;for(a=t.data,u=t.accessors[1],i=o,c=0;c<r;c++)u(a,i,e),i+=n;return t}e=function(){try{return r({},"x",{}),!0}catch(r){return!1}}()?t:function(r,e,t){var f,l,_,s;if("object"!=typeof r||null===r||"[object Array]"===o.call(r))throw new TypeError("invalid argument. First argument must be an object. Value: `"+r+"`.");if("object"!=typeof t||null===t||"[object Array]"===o.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((l="value"in t)&&(i.call(r,e)||c.call(r,e)?(f=r.__proto__,r.__proto__=n,delete r[e],r[e]=t.value,r.__proto__=f):r[e]=t.value),_="get"in t,s="set"in t,l&&(_||s))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return _&&a&&a.call(r,e,t.get),s&&u&&u.call(r,e,t.set),r};function b(r,e,t,n){var o,a,u,i;if(r<=0)return t;if((i=p(t)).accessorProtocol)return d(r,e,i,n,o=n<0?(1-r)*n:0),i.data;if(1===n){if((u=r%8)>0)for(a=0;a<u;a++)t[a]=e;if(r<8)return t;for(a=u;a<r;a+=8)t[a]=e,t[a+1]=e,t[a+2]=e,t[a+3]=e,t[a+4]=e,t[a+5]=e,t[a+6]=e,t[a+7]=e;return t}for(o=n<0?(1-r)*n:0,a=0;a<r;a++)t[o]=e,o+=n;return t}function y(r,e,t,n,o){var a,u,i,c;if(r<=0)return t;if((i=p(t)).accessorProtocol)return d(r,e,i,n,o),i.data;if(a=o,1===n){if((u=r%8)>0)for(c=0;c<u;c++)t[a]=e,a+=n;if(r<8)return t;for(c=u;c<r;c+=8)t[a]=e,t[a+1]=e,t[a+2]=e,t[a+3]=e,t[a+4]=e,t[a+5]=e,t[a+6]=e,t[a+7]=e,a+=8;return t}for(c=0;c<r;c++)t[a]=e,a+=n;return t}e(b,"ndarray",{configurable:!1,enumerable:!1,writable:!1,value:y});export{b as default,y as ndarray};
//# sourceMappingURL=mod.js.map
